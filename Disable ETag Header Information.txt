#Author : Abhishek Yadav
#Reviewer : Nitin Sharma
#Unit Test : Anmol Rajat
#Date of Fix : 08/28/2017
#Objective : Disable ETag Header Information
#Note1:The script is written in python2 
#Note2:The user running the script must have administrative privileges.
#Note3:The log file for the script will be generated at the /tmp.
#Note4:While running the script, a backup is automatically created at the location of file.
#Note5:Please restart the server manually after running this script.

# DISCLAIMER: THE ROLLBACK MUST BE DONE ON THE SAME DATE THE SCRIPT HAS BEEN EXECUTED.


import os, sys, datetime, time

odat = (time.strftime("%d-%m-%Y"))
dat = datetime.datetime.now()

if os.path.exists('/tmp')==False:
        print "/tmp directory is not there, so creating /tmp"
        os.makedirs('/tmp')

file_log = '/tmp/VRG100_VulnerabilityFix_' + str(odat) + '.log'
f=open(file_log,'a+')
saveout = sys.stdout
sys.stdout = f

conf_file_name = ["apache.conf", "apache2.conf", "httpd.conf"]

def find_path():
        for root, dirs, files in os.walk(r'/'):
                for name in files:
                        if name in conf_file_name:
                                print "Name of file found is: ", name
                                z = os.path.abspath(os.path.join(root, name))
                                return z


print "**************************Log Started for VRG-100*************************************"

linux_check = (os.popen("uname -a").readlines())
linux_check = ''.join(linux_check)
print "Linux Details: ", linux_check

x = find_path()


if x is None:
	print "File not found..."
        sys.stdout = saveout
        f.close()
        print "Log file created at: ", file_log
        print "No config file found at all in '/' ..."
        exit()

x = str(x)
print "Complete path of File Found is : ",x

y='.VRG-100.'+str(odat)
bkpchk = x + y
if (os.path.isfile(bkpchk)==False):
        os.system('cp '+x+' '+bkpchk)


file = open(x, 'r')
filedata = file.readlines()
file.close()

count = 0

print "Now will read file..."
for lines in filedata:
        if 'FileEtag None' in lines:
                count = 1
                if lines.startswith('#'):
                        filedata[filedata.index(lines)] = 'FileEtag None'

if count == 0:
        filedata.append('\nFileEtag None\n')

filedata = "".join(filedata)

file = open(x, 'w')
file.write(filedata)
file.close()

dat = datetime.datetime.now()
print '\n'+str(dat)+'\n'
print "Message: Backup for the .conf is created as: ", bkpchk
print "Message: Check log files at: ", file_log
print "Message: Please restart the service manually..."

print "**************************Log Ended for VRG-100*************************************"

sys.stdout = saveout
f.close()

print "Backup for the .conf as .conf.bkp is created as: ", bkpchk
print "Log file created at: ", file_log
print "Please restart the Server manually"


